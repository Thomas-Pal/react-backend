version: 2.1

# Use Node orb provided by CircleCI
# Orbs are reusable snippets of code that help automate repeated processes, speed up project setup, and make it easy to integrate with third-party tools.
#This allows us to run npm tests on are code that we define in App.test.js.
# Use CircleCI base node config, this allows NPM tests to be run in the pipeline
orbs: 
  node: circleci/node@4.9.0
executors:
  #Define docker image name for publishing
  docker-publisher:
    environment:
      NODE_API_SERVER: thomaspal/node-server
    docker:
      - image: cimg/base:stable
jobs:
  #This step builds the new docker image 
  Build-Docker-Image:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: connect docker 
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  
      - run:
          name: Build Docker image node
          command: |
            docker build -t $NODE_API_SERVER:latest ./

      - run:
          name: Archive Docker image
          command: docker save -o image.tar $NODE_API_SERVER
      
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  #This step publishes the docker image to Docker hub using so environment variable that are populate on CircleCI
  Publish-Latest-Image:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $NODE_API_SERVER:latest
  
workflows:
  #Define the workflow, run all jobs starting with node-test
  version: 2
  build-master:
    jobs:
      - Build-Docker-Image:
          filters:
            branches:
              only: master
      - Publish-Latest-Image:
          requires:
            - build
          filters:
            branches:
              only: master
